<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ezrilei.github.io</id>
    <title>my blog</title>
    <updated>2021-07-06T00:30:33.599Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ezrilei.github.io"/>
    <link rel="self" href="https://ezrilei.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://ezrilei.github.io/images/avatar.png</logo>
    <icon>https://ezrilei.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, my blog</rights>
    <entry>
        <title type="html"><![CDATA[使用R语言批量写word文档]]></title>
        <id>https://ezrilei.github.io/post/shi-yong-r-yu-yan-pi-liang-xie-word-wen-dang/</id>
        <link href="https://ezrilei.github.io/post/shi-yong-r-yu-yan-pi-liang-xie-word-wen-dang/">
        </link>
        <updated>2021-07-06T00:26:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="原理">原理</h2>
<p>发展党员的批文有既定的模板。这样在召开党委会集体研究决定后，我们只需要把前期收集的.xlsx表格中的信息，填写到作为模板的word文档中的对应位置即可。</p>
<p>为了方便定位，我们可以在制作模板时，就把要填写的地方做好标记。比如使用关键词<code>name.person</code>（发展对象的姓名）、<code>name.cpc.branch</code>（党支部名称。如果批文下发到党总支或者社区党委，这里为党总支名称或社区党委名称）、<code>serial_num</code>（预审通过后将下发《入党志愿书》，这里为省委统一印制的《入党志愿书》编号）。</p>
<p>package <code>xlsx</code>用于读取.xlsx表格。<br>
package <code>officer</code>用于处理.docx文档。包括读取文档，替换关键词，添加分页符，输出.docx文档。<br>
package<code>stringr</code>用于文本处理，在标记输出文档顺序的时候。 （如果不标记顺序，合并的文档可能是根据a-z的顺序排列的，而不是表格中的序号。）</p>
<hr>
<h2 id="准备工作">准备工作</h2>
<ul>
<li>准备包含批文所需信息的.xlsx表格</li>
<li>准备作为批文模板的.docx文档</li>
</ul>
<hr>
<h2 id="set-up">set up</h2>
<pre><code class="language-r">setwd(&quot;~/.../RwkSpace&quot;)

library(xlsx)
library(officer)
library(stringr)

# create dir
if (!dir.exists('output')) {
  dir.create('output')
}
</code></pre>
<h2 id="读取xlsx">读取.xlsx</h2>
<p>调用xlsx package 的 read.xlsx函数  读取.xlsx表格<br>
稍后将把 .xlsx表格中的信息 填写到批文中。</p>
<pre><code class="language-r">info.tt &lt;- read.xlsx(file = &quot;./2021年第一批发展对象_信息采集.xlsx&quot;,
                     sheetIndex = 3, startRow = 2, stringsAsFactors = FALSE
                     ) 
</code></pre>
<h2 id="循环替换模板中的文字">循环替换模板中的文字</h2>
<pre><code class="language-r">#### write word documents ####
for(i in 1:nrow(info.tt)){
  # 读取 模板.docx
  officer_doc &lt;- officer::read_docx(path = &quot;./【模板】预审意见.docx&quot;)
  
  # def variable
  name.person &lt;- info.tt$姓名[i]
  name.cpc.branch &lt;- info.tt$批复下发到的党支部[i]
  serial_num &lt;- info.tt$入党志愿书编号[i] %&gt;% as.character()
  
  # 替换
  doc_replaced &lt;- officer_doc %&gt;%
    body_replace_all_text(old_value = &quot;name.person&quot;, 
                          new_value = name.person, 
                          only_at_cursor = FALSE
    ) %&gt;%
    body_replace_all_text(old_value = &quot;name.cpc.branch&quot;, 
                          new_value = name.cpc.branch, 
                          only_at_cursor = FALSE
    ) %&gt;% 
    body_replace_all_text(old_value = &quot;serial_num&quot;, 
                          new_value = serial_num, 
                          only_at_cursor = FALSE
                          )
                          
  # &quot;./output/【张三】预审的意见.docx&quot;
  print(doc_replaced, 
        target = paste0(&quot;./output/&quot;, i,&quot;【&quot;, name.person, &quot;】&quot;, &quot;预审的意见.docx&quot;)
  )

}
</code></pre>
<h2 id="merge-all-word-docx-into-a-single-file">merge all word docx into a single file</h2>
<p>为了方便打印 将生成的数个word文档 合并成一个文档 中间用分页符隔开</p>
<pre><code class="language-r">#### merge all word docx ####
# get ordered
doc.path &lt;- paste0(&quot;./output/&quot;, 
                   list.files(path = &quot;./output&quot;)
)
idx &lt;- doc.path %&gt;% str_extract_all(pattern = &quot;\\d+&quot;) %&gt;% unlist() %&gt;% as.numeric() %&gt;% order() 
doc.path &lt;- doc.path[idx]

# merge doc
doc_merge &lt;- officer::read_docx(path = doc.path[1])

for(i in 2:length(doc.path)){
  doc_merge &lt;- doc_merge %&gt;%
    body_add_break() %&gt;% # add a page break into an rdocx object
    body_add_docx(src = doc.path[i]) # add content of a docx into an rdocx object
}


print(doc_merge, 
      target = paste0(&quot;./&quot;, &quot;【&quot;, &quot;All&quot;, &quot;】&quot;, &quot;预审的意见.docx&quot;)
)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Testing]]></title>
        <id>https://ezrilei.github.io/post/testing/</id>
        <link href="https://ezrilei.github.io/post/testing/">
        </link>
        <updated>2021-07-05T14:36:02.000Z</updated>
        <content type="html"><![CDATA[<p>A test</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://ezrilei.github.io/post/hello-gridea/</id>
        <link href="https://ezrilei.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>